// Time Complexity <--------------->


O(N!)
O(2^N)
O(N^3)
O(N^2)         <------------ Egula serially uporer dike gele Time Complexity high  -------->
O(NlogN)
O(N)
O(logN)
O(1)



Constrains ------->

<=[10,,,,11]   -------->    O(n!), O(N^6)          
<[15,,,,18]    -------->    O(2^n * n^2)
<100           -------->    O(n^4)
<400           -------->    O(n^3)
<2000          -------->    O(n^2 * log n)
<10^4      -------->   O(n^2)   // Mane input limit jodi 10^4 dewa thake tokhon maximum O(n^2) porjonto Time Complexity hoite pare , kintu er uporer gula hoite parbe na
<10^6          -------->    O(nlog n)
<10^8          -------->    O(n), O(log n)











Space complexity  <------------------------------->

--> Memory Space
--> Big-O Notation

(1) - Auxiliary space : Space that you take to solve the problem
(2) - Input Space : Space that you take to store the input

If there is given an array  of size N, A[N]
Then, Space Complexity = O(N)

Or,
there is given two variables like a,b and I have to sum up them
so the process :--->

int a , b;
int c = a+b;   // Here, C is Auxiliary space
So, space complexity = O(3)  because, I take 3 variables.
But if i work on that two variables like, b = a+b; then the sace complexity will be like O(2)
